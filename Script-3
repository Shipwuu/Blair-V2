-- ScreenGui Script

local textColorNone = Color3.fromRGB(255, 255, 255) -- White color for "None" text with slight transparency
local textColorHunting = Color3.fromRGB(255, 255, 0) -- Yellow color for "Hunting" text
local isTracking = false -- Flag to control the tracking loop

-- Function to create the permanent news screen GUI
local function createNewsScreen()
    local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local newsScreen = Instance.new("ScreenGui")
    newsScreen.Name = "GhostNewsScreen"
    newsScreen.Parent = playerGui
    newsScreen.ResetOnSpawn = false

    local displayFrame = Instance.new("Frame")
    displayFrame.Name = "GhostDisplayFrame"
    displayFrame.Size = UDim2.new(1, -20, 0, 20)  -- Full width with 10 pixels padding on each side, height of 50 pixels
    displayFrame.Position = UDim2.new(0, 10, 0, 10)  -- Positioned at the top with a small margin
    displayFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black color for background
    displayFrame.BackgroundTransparency = 0.8  -- Semi-transparent background
    displayFrame.BorderSizePixel = 0  -- No border
    displayFrame.Parent = newsScreen

    local ghostLabel = Instance.new("TextLabel")
    ghostLabel.Name = "GhostLabel"
    ghostLabel.Size = UDim2.new(1, 0, 1, 0)
    ghostLabel.BackgroundTransparency = 1
    ghostLabel.Font = Enum.Font.SourceSansBold -- Bold font for visibility
    ghostLabel.TextSize = 24 -- Increased text size for readability
    ghostLabel.Text = "Ghost: None" -- Default text
    ghostLabel.TextColor3 = textColorNone
    ghostLabel.TextTransparency = 0.3  -- Slight transparency for "None" text
    ghostLabel.TextStrokeTransparency = 0
    ghostLabel.TextXAlignment = Enum.TextXAlignment.Center
    ghostLabel.TextYAlignment = Enum.TextYAlignment.Center
    ghostLabel.Parent = displayFrame

    return ghostLabel, displayFrame -- Return both the ghostLabel and displayFrame
end

-- Start creating the news screen
local ghostLabel, displayFrame = createNewsScreen()

-- Tracking Ghost Script

-- Function to continuously check for the Ghost's presence
local function trackGhost()
    while true do
        local ghost = workspace:FindFirstChild("Ghost")
        
        if ghost then
            if not isTracking then
                print("Ghost detected. Starting ESP.")
                isTracking = true

                -- Reset the ghost label and background
                ghostLabel.Text = "Ghost: Hunting"
                ghostLabel.TextColor3 = textColorHunting  -- Yellow color when ghost is detected
                ghostLabel.TextTransparency = 0  -- No transparency for "Hunting" text

                -- Start smoother fade effect between colors
                spawn(function()
                    while isTracking do
                        -- Fade in to red
                        for i = 0, 1, 0.05 do
                            displayFrame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                            displayFrame.BackgroundTransparency = 1 - i
                            wait(0.03)
                        end

                        -- Fade out from red to transparent
                        for i = 0, 1, 0.05 do
                            displayFrame.BackgroundTransparency = i
                            wait(0.03)
                        end

                        -- Fade in to black
                        for i = 0, 1, 0.05 do
                            displayFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                            displayFrame.BackgroundTransparency = 1 - i
                            wait(0.03)
                        end

                        -- Fade out from black to transparent
                        for i = 0, 1, 0.05 do
                            displayFrame.BackgroundTransparency = i
                            wait(0.03)
                        end
                    end
                end)
            end
        else
            if isTracking then
                print("Ghost disappeared. Stopping ESP.")
                isTracking = false

                -- Reset ghost label and background when ghost disappears
                ghostLabel.Text = "Ghost: None"
                ghostLabel.TextColor3 = textColorNone  -- White color when no ghost is detected
                ghostLabel.TextTransparency = 0.3  -- Slight transparency for "None" text
                displayFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Reset background to black when no ghost is detected
                displayFrame.BackgroundTransparency = 0.8 -- Reset to original transparency
            end
        end

        wait(0.2) -- Check every 0.2 seconds
    end
end

-- Start the ghost tracking function
spawn(trackGhost)

-- End






local FillColor = Color3.fromRGB(175, 25, 255)
local DepthMode = "AlwaysOnTop"
local FillTransparency = 0.5
local OutlineColor = Color3.fromRGB(255, 255, 255)
local OutlineTransparency = 0.7

local CoreGui = game:FindService("CoreGui")
local Storage = Instance.new("Folder")
Storage.Parent = CoreGui
Storage.Name = "Ghost_Highlight_Storage"

local function HighlightGhost()
    -- Check if the ghost exists in the workspace
    local ghost = workspace:FindFirstChild("Ghost")
    if ghost then
        -- Iterate through all the ghost parts
        for _, part in ipairs(ghost:GetChildren()) do
            if part:IsA("BasePart") then
                -- Create a highlight for the ghost part
                local highlight = Instance.new("Highlight")
                highlight.Name = "GhostHighlight_" .. part.Name
                highlight.FillColor = FillColor
                highlight.DepthMode = DepthMode
                highlight.FillTransparency = FillTransparency
                highlight.OutlineColor = OutlineColor
                highlight.OutlineTransparency = OutlineTransparency
                highlight.Adornee = part
                highlight.Parent = Storage
            end
        end
    end
end

-- Function to clear highlights when the ghost is no longer detected
local function ClearGhostHighlight()
    for _, highlight in ipairs(Storage:GetChildren()) do
        if highlight:IsA("Highlight") then
            highlight:Destroy()
        end
    end
end

-- Continuously check for the ghost and apply ESP
while true do
    -- Clear previous highlights to prevent duplicates
    ClearGhostHighlight()
    
    -- Highlight the ghost if it exists
    HighlightGhost()
    
    -- Wait for a short interval before checking again
    wait(1)
end

-- End



