local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Wait for the MaxSlots property to be added if it doesn't exist yet
local success, maxSlots = pcall(function()
    return LocalPlayer:FindFirstChild("MaxSlots")
end)

if success and maxSlots then
    -- If MaxSlots exists, change its value to 6
    maxSlots.Value = 6
else
    print("MaxSlots property not found for LocalPlayer.")
end

-- End





local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create a new ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = PlayerGui

-- Create a new TextLabel
local textLabel = Instance.new("TextLabel")
textLabel.Parent = screenGui
textLabel.TextSize = 12
textLabel.Font = Enum.Font.GothamBold
textLabel.TextColor3 = Color3.new(1, 1, 1) -- White color
textLabel.BackgroundTransparency = 1
textLabel.Size = UDim2.new(0, 100, 0, 50) -- Small size for the label
textLabel.Position = UDim2.new(0, 10, 0, 10) -- Position in the left corner, slightly down

-- Function to update the TextLabel with the current value
local function updateActivityValue()
    local activity = ReplicatedStorage:FindFirstChild("Activity")
    if activity and activity:IsA("ValueBase") then
        textLabel.Text = "Activity\n" .. tostring(activity.Value)
    else
        textLabel.Text = "Activity\nNot Found"
    end
end

-- Initial update
updateActivityValue()

-- Connect to the Changed event to update the value dynamically
local activity = ReplicatedStorage:FindFirstChild("Activity")
if activity and activity:IsA("ValueBase") then
    activity:GetPropertyChangedSignal("Value"):Connect(updateActivityValue)
end

-- Monitor for changes in ReplicatedStorage to detect when "Activity" is added or removed
ReplicatedStorage.ChildAdded:Connect(function(child)
    if child.Name == "Activity" and child:IsA("ValueBase") then
        updateActivityValue()
        child:GetPropertyChangedSignal("Value"):Connect(updateActivityValue)
    end
end)

ReplicatedStorage.ChildRemoved:Connect(function(child)
    if child.Name == "Activity" then
        updateActivityValue()
    end
end)
