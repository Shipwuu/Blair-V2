-- Create ScreenGui
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NewsScreenGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Create LogUpdate Frame
local logUpdateFrame = Instance.new("Frame")
logUpdateFrame.Name = "LogUpdateFrame"
logUpdateFrame.Parent = screenGui
logUpdateFrame.Position = UDim2.new(0.2, 0, 0.5, 30)
logUpdateFrame.Size = UDim2.new(0, 200, 0, 300)
logUpdateFrame.BackgroundTransparency = 0.8
logUpdateFrame.BackgroundColor3 = Color3.fromRGB(148, 73, 0)

-- Add UICorner for rounded edges to LogUpdateFrame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = logUpdateFrame

-- Add UIStroke for frame outline
local uiStroke = Instance.new("UIStroke")
uiStroke.Color = Color3.fromRGB(255, 255, 255) -- White color for the stroke
uiStroke.Transparency = 0.5
uiStroke.Thickness = 3
uiStroke.Parent = logUpdateFrame

-- Add UIGradient to the UIStroke
local uiGradient = Instance.new("UIGradient")
uiGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(73, 54, 40)),  -- Main color (dark brown)
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(214, 192, 179)), -- Shiny color (light yellow) at middle
    ColorSequenceKeypoint.new(1, Color3.fromRGB(73, 54, 40))   -- Main color again
})
uiGradient.Parent = uiStroke

-- Function to animate shiny effect for UIStroke
local function animateShinyEffect(uiGradient)
    while uiGradient.Parent do
        -- Phase 1: Hold the main color for a moment
        uiGradient.Offset = Vector2.new(-1, 0) -- Start with full main color
        wait(1) -- Hold the main color for a second

        -- Phase 2: Smooth shiny line pass
        for i = -1, 1, 0.02 do
            uiGradient.Offset = Vector2.new(i, 0) -- Move the shiny line smoothly across
            wait(0.05) -- Control the speed for a smooth animation
        end
    end
end

-- Start the animation loop for shiny effect for the frame
spawn(function()
    animateShinyEffect(uiGradient)
end)

-- Create CloseFrame
local closeFrame = Instance.new("Frame")
closeFrame.Name = "CloseFrame"
closeFrame.Parent = screenGui
closeFrame.Position = UDim2.new(0.3, 75, 0.5, 10)  -- Positioned at the top, away from LogUpdateFrame
closeFrame.Size = UDim2.new(0, 50, 0, 50)
closeFrame.BackgroundColor3 = Color3.fromRGB(212, 178, 142)  -- Background color as specified
closeFrame.BackgroundTransparency = 0.5

-- Add UICorner to CloseFrame (customized)
local closeFrameUICorner = Instance.new("UICorner")
closeFrameUICorner.CornerRadius = UDim.new(0, 10)  -- Rounded corner with radius 10,10
closeFrameUICorner.Parent = closeFrame

-- Add UIStroke to CloseFrame
local closeFrameUIStroke = Instance.new("UIStroke")
closeFrameUIStroke.Color = Color3.fromRGB(255, 255, 255) -- White color for the stroke
closeFrameUIStroke.Transparency = 0.5
closeFrameUIStroke.Thickness = 3
closeFrameUIStroke.Parent = closeFrame

-- Add UIGradient to CloseFrame's UIStroke
local closeFrameUIGradient = Instance.new("UIGradient")
closeFrameUIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(73, 54, 40)),  -- Main color (dark brown)
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(214, 192, 179)), -- Shiny color (light yellow) at middle
    ColorSequenceKeypoint.new(1, Color3.fromRGB(73, 54, 40))   -- Main color again
})
closeFrameUIGradient.Parent = closeFrameUIStroke

-- Function to animate shiny effect for CloseFrame UIStroke
local function animateShinyEffectForCloseFrame(uiGradient)
    while uiGradient.Parent do
        -- Phase 1: Hold the main color for a moment
        uiGradient.Offset = Vector2.new(-1, 0) -- Start with full main color
        wait(1) -- Hold the main color for a second

        -- Phase 2: Smooth shiny line pass
        for i = -1, 1, 0.02 do
            uiGradient.Offset = Vector2.new(i, 0) -- Move the shiny line smoothly across
            wait(0.05) -- Control the speed for a smooth animation
        end
    end
end

-- Start the animation loop for shiny effect for CloseFrame
spawn(function()
    animateShinyEffectForCloseFrame(closeFrameUIGradient)
end)

-- Create ImageButton inside CloseFrame
local imageButton = Instance.new("ImageButton")
imageButton.Name = "CloseImageButton"
imageButton.Parent = closeFrame
imageButton.Position = UDim2.new(0, 5, 0, 5)  -- Position specified
imageButton.Size = UDim2.new(0, 40, 0, 40)  -- Size specified
imageButton.BackgroundTransparency = 1
imageButton.Image = "rbxthumb://type=Asset&id=75307452820537&w=420&h=420"

-- Function to fade between two images
local image1 = "rbxthumb://type=Asset&id=75307452820537&w=420&h=420"
local image2 = "rbxthumb://type=Asset&id=106327254270115&w=420&h=420"

local function fadeImages(button)
    while button.Parent do
        -- Fade out current image
        for transparency = 0, 1, 0.1 do
            button.ImageTransparency = transparency
            wait(0.05) -- Slightly fast animation tempo
        end
        -- Switch to the next image
        button.Image = (button.Image == image1) and image2 or image1
        -- Fade in the new image
        for transparency = 1, 0, -0.1 do
            button.ImageTransparency = transparency
            wait(0.05) -- Slightly fast animation tempo
        end
    end
end

-- Start fade in/fade out animation for the ImageButton
spawn(function()
    fadeImages(imageButton)
end)

-- Function to destroy all frames
local function destroyAllFrames()
    for _, child in pairs(screenGui:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy()
        end
    end
end

-- Connect the click event to the destroy function
imageButton.MouseButton1Click:Connect(destroyAllFrames)

-- Create TextLabel inside the LogUpdate Frame
local textLabel = Instance.new("TextLabel")
textLabel.Name = "LogTextLabel"
textLabel.Parent = logUpdateFrame
textLabel.BackgroundTransparency = 0.8
textLabel.BackgroundColor3 = Color3.fromRGB(255, 215, 177)  -- Light background color
textLabel.BorderSizePixel = 0
textLabel.Position = UDim2.new(0, 0, 0, 0)  -- Position at the top of the frame
textLabel.Size = UDim2.new(0, 200, 0, 30)
textLabel.Text = "Log Update"
textLabel.TextColor3 = Color3.fromRGB(242, 220, 183)  -- Light text color
textLabel.Font = Enum.Font.GothamBold
textLabel.TextSize = 18

-- Add UICorner for rounded edges to LogUpdateFrame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = textLabel

-- Add UIStroke to TextLabel (same as frame)
local textLabelUIStroke = Instance.new("UIStroke")
textLabelUIStroke.Color = Color3.fromRGB(255, 255, 255) -- White color for the stroke
textLabelUIStroke.Transparency = 0.5
textLabelUIStroke.Thickness = 1.50
textLabelUIStroke.Parent = textLabel

-- Add UIGradient to TextLabel's UIStroke (same as frame)
local textLabelUIGradient = Instance.new("UIGradient")
textLabelUIGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(73, 54, 40)),  -- Main color (dark brown)
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(214, 192, 179)), -- Shiny color (light yellow) at middle
    ColorSequenceKeypoint.new(1, Color3.fromRGB(73, 54, 40))   -- Main color again
})
textLabelUIGradient.Parent = textLabelUIStroke

-- Function to animate shiny effect for TextLabel UIStroke (dual-phase: main hold + shiny pass)
local function animateShinyEffectForTextLabel(uiGradient)
    while uiGradient.Parent do
        -- Phase 1: Hold the main color for a moment
        uiGradient.Offset = Vector2.new(-1, 0) -- Start with full main color
        wait(1) -- Hold the main color for a second

        -- Phase 2: Smooth shiny line pass
        for i = -1, 1, 0.02 do
            uiGradient.Offset = Vector2.new(i, 0) -- Move the shiny line smoothly across
            wait(0.05) -- Control the speed for a smooth animation
        end
    end
end

-- Start the animation loop for shiny effect for the TextLabel
spawn(function()
    animateShinyEffectForTextLabel(textLabelUIGradient)
end)

-- Create the ScrollingFrame inside the LogUpdate Frame
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "LogUpdatesScrollingFrame"
scrollingFrame.Parent = logUpdateFrame
scrollingFrame.BackgroundTransparency = 0.8
scrollingFrame.BackgroundColor3 = Color3.fromRGB(127, 127, 127)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)  -- Makes the canvas scrollable vertically
scrollingFrame.Position = UDim2.new(0, 0, 0.1, 0)
scrollingFrame.Size = UDim2.new(0, 200, 0, 100)
scrollingFrame.ClipsDescendants = true

-- Add UIListLayout to the ScrollingFrame to arrange elements vertically
local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Parent = scrollingFrame
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiListLayout.Padding = UDim.new(0, 5)  -- Space between each log update

-- Function to create a new log update TextLabel
local function createLogUpdateText(updateText, isLatest)
    local logUpdateText = Instance.new("TextLabel")
    logUpdateText.Name = "LogUpdateText"
    logUpdateText.Parent = scrollingFrame
    logUpdateText.BackgroundTransparency = 0.949
    logUpdateText.BackgroundColor3 = isLatest and Color3.fromRGB(0, 127, 0) or Color3.fromRGB(255, 0, 0)  -- Green for latest, Red for removed
    logUpdateText.BorderSizePixel = 0
    logUpdateText.Size = UDim2.new(1, 0, 0, 50)  -- Full width of ScrollingFrame, height of 50
    logUpdateText.Text = updateText
    logUpdateText.TextScaled = true  -- Automatically scale text to fit within the label
    logUpdateText.Font = Enum.Font.GothamBold
    logUpdateText.TextSize = 14
    logUpdateText.TextColor3 = Color3.fromRGB(0, 0, 0)  -- Black text color

    -- Add UICorner, UIStroke, and UIGradient to LogUpdateText
    local logUpdateTextUICorner = Instance.new("UICorner")
    logUpdateTextUICorner.CornerRadius = UDim.new(0, 8)
    logUpdateTextUICorner.Parent = logUpdateText

    local logUpdateTextUIStroke = Instance.new("UIStroke")
    logUpdateTextUIStroke.Color = Color3.fromRGB(255, 255, 255)
    logUpdateTextUIStroke.Transparency = 0.5
    logUpdateTextUIStroke.Thickness = 3
    logUpdateTextUIStroke.Parent = logUpdateText

    local logUpdateTextUIGradient = Instance.new("UIGradient")
    logUpdateTextUIGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(73, 54, 40)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(214, 192, 179)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(73, 54, 40))
    })
    logUpdateTextUIGradient.Parent = logUpdateTextUIStroke
end

-- Test with some log updates
createLogUpdateText("Hello", true)  -- Latest update, green
wait(1)
createLogUpdateText("V-1\n- Emf Update\n- Part Update\n- Detector Update\n- etc.", false)  -- Removed update, red
